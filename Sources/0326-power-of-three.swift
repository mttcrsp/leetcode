/// https://leetcode.com/problems/power-of-three/
struct PowerOfThree {
  func isPowerOfThree(_ n: Int) -> Bool {
    let powers: Set<Int> = [1, 3, 9, 27, 81, 243, 729, 2187, 6561, 19683, 59049, 177_147, 531_441, 1_594_323, 4_782_969, 14_348_907, 43_046_721, 129_140_163, 387_420_489, 1_162_261_467, 3_486_784_401, 10_460_353_203, 31_381_059_609, 94_143_178_827, 282_429_536_481, 847_288_609_443, 2_541_865_828_329, 7_625_597_484_987, 22_876_792_454_961, 68_630_377_364_883, 205_891_132_094_649, 617_673_396_283_947, 1_853_020_188_851_841, 5_559_060_566_555_523, 16_677_181_699_666_569, 50_031_545_098_999_707, 150_094_635_296_999_121, 450_283_905_890_997_363, 1_350_851_717_672_992_089, 4_052_555_153_018_976_267]
    return powers.contains(n)
  }
}
